---
---

<header class="header">
	<div class="container">
		<div class="header-content">
			<a href="/" class="logo">
				<h1>START</h1>
			</a>
			<nav class="nav">
				<a href="#features">Características</a>
				<a href="#privacy">Privacidad</a>
				<a href="#cta">Comenzar</a>
			</nav>
			<button class="theme-toggle" id="themeToggle" aria-label="Cambiar tema">
				<span class="sun">☀</span>
				<span class="moon">☾</span>
			</button>
		</div>
	</div>
</header>

<script>
	// Init theme on load and toggle (plain JS)
	const themeToggle = document.getElementById('themeToggle');
	const html = document.documentElement;
	const body = document.body;

	// Determine initial theme: localStorage -> prefers-color-scheme -> default light
	const saved = localStorage.getItem('theme');
	const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
	const initial = saved ? saved : (prefersDark ? 'dark' : 'light');

	function enableDark() {
		html.classList.add('dark');
		html.classList.remove('light');
		body.classList.add('dark');
		body.classList.remove('light');
	}

	function enableLight() {
		html.classList.remove('dark');
		html.classList.add('light');
		body.classList.remove('dark');
		body.classList.add('light');
	}

	if (initial === 'dark') enableDark(); else enableLight();

	themeToggle?.addEventListener('click', () => {
	 	const isDark = html.classList.contains('dark');
	 	if (isDark) {
	 		enableLight();
	 		localStorage.setItem('theme', 'light');
	 	} else {
	 		enableDark();
	 		localStorage.setItem('theme', 'dark');
	 	}
	});

// Hide header on scroll down, show on scroll up (small threshold) with slide+blur
(function () {
	function initHideOnScroll() {
		const headerEl = document.querySelector('.header');
		if (!headerEl) return;

		let lastScroll = window.scrollY || window.pageYOffset || 0;
		let ticking = false;
		const threshold = 8; // mínimo movimiento para considerar
		let lastDirection = 0; // 1 down, -1 up

		function onScroll() {
			if (!headerEl) return;
			const current = window.scrollY || window.pageYOffset || 0;
			const delta = current - lastScroll;

			if (Math.abs(delta) < threshold) {
				// ignore small scrolls
				ticking = false;
				return;
			}

			const direction = delta > 0 ? 1 : -1;

			if (direction === 1 && current > 80) {
				// scrolling down
				if (lastDirection !== 1) {
					headerEl.classList.add('header--hidden');
					lastDirection = 1;
				}
			} else if (direction === -1) {
				// scrolling up
				if (lastDirection !== -1) {
					headerEl.classList.remove('header--hidden');
					lastDirection = -1;
				}
			}

			lastScroll = current;
			ticking = false;
		}

		window.addEventListener('scroll', function () {
			if (!ticking) {
				window.requestAnimationFrame(onScroll);
				ticking = true;
			}
		}, { passive: true });
	}

	if (document.readyState === 'loading') {
		document.addEventListener('DOMContentLoaded', initHideOnScroll);
	} else {
		initHideOnScroll();
	}
})();
</script>

<style>
	.container {
		max-width: 1200px;
		margin: 0 auto;
		padding: 0 2rem;
	}

	.header {
		position: fixed;
		top: 1rem;
		left: 1rem;
		right: 1rem;
		background-color: rgba(255, 255, 255, 0.95);
		border: 1px solid var(--border);
		border-radius: 16px;
		z-index: 1000;
		backdrop-filter: blur(10px);
		box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
		transition: transform 0.35s cubic-bezier(.2,.9,.2,1), opacity 0.25s ease, filter 0.35s ease;
		will-change: transform, opacity, filter;
	}

	/* Clase para ocultar el header cuando se hace scroll hacia abajo */
	.header--hidden {
		transform: translateY(-110%);
		pointer-events: none;
		opacity: 0;
		filter: blur(6px);
	}

	/* Dark mode: forzar fondo negro y texto blanco con mayor especificidad */
	html.dark .header,
	body.dark .header {
		background-color: #000 !important; /* fondo negro puro */
		color: #fff !important; /* texto blanco */
		border-color: rgba(255, 255, 255, 0.15) !important;
		box-shadow: 0 4px 20px rgba(0, 0, 0, 0.6) !important;
	}

	/* Forzar color blanco dentro del header en modo oscuro */
	html.dark .header a,
	body.dark .header a,
	html.dark .header .logo,
	body.dark .header .logo,
	html.dark .header .logo h1,
	body.dark .header .logo h1,
	html.dark .header .nav a,
	body.dark .header .nav a,
	html.dark .theme-toggle,
	body.dark .theme-toggle {
		color: #fff !important;
	}

	/* Contraste del botón en modo oscuro */
	html.dark .theme-toggle,
	body.dark .theme-toggle {
		background: rgba(255,255,255,0.04) !important;
		border-color: rgba(255,255,255,0.12) !important;
	}




	.header-content {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 1rem 0;
	}

	.logo h1 {
		font-size: 1.5rem;
		letter-spacing: 0.2rem;
		margin: 0;
	}

	.logo {
		text-decoration: none;
		color: var(--text);
	}

	.nav {
		display: flex;
		gap: 2rem;
	}

	.nav a {
		text-decoration: none;
		color: var(--text);
		font-weight: 500;
		transition: color 0.3s ease;
	}

	.nav a:hover {
		color: var(--accent-hover);
	}

	.theme-toggle {
		background: none;
		border: 2px solid var(--border);
		border-radius: 50px;
		padding: 0.5rem 1rem;
		cursor: pointer;
		font-size: 1.2rem;
		display: flex;
		align-items: center;
		gap: 0.5rem;
		transition: all 0.3s ease;
		color: var(--text);
	}

	.dark .theme-toggle {
		color: #ffffff;
		border-color: rgba(255, 255, 255, 0.2);
	}

	.theme-toggle:hover {
		border-color: var(--accent);
		transform: scale(1.05);
	}

	.dark .theme-toggle:hover {
		border-color: rgba(255, 255, 255, 0.4);
	}

	.dark .sun {
		display: none;
	}

	.moon {
		display: none;
	}

	.dark .moon {
		display: inline;
	}

	:not(.dark) .sun {
		display: inline;
	}

	@media (max-width: 768px) {
		.nav {
			display: none;
		}
	}
</style>
